idRef {
  id: "5b5121d3336332c42a786777"
}
ui_name: "debug_kane"
nodes {
  idRef {
    id: "5b5121f4336332c42a78677e"
  }
  index: 0
  text: "Mortal, I am at your disposal."
  branches {
    responseText: ""
    nextNodeIndex: 1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5b512236336332c42a786781"
  }
  index: 1
  text: "I will advance plot and control plot variables for you.\n\n{{GM}}He coughs. Holy drek. What a SCARY cough.{{/GM}}\n\nAhem."
  branches {
    responseText: "I don\'t like this place! I wanna go home!"
    nextNodeIndex: 2
  }
  branches {
    responseText: "{{GM}}Change Act.{{/GM}}"
    nextNodeIndex: 3
  }
  branches {
    responseText: "TV Off."
    nextNodeIndex: 4
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5b5122bb336332c42a786784"
  }
  index: 2
  text: "As you wish."
  branches {
    responseText: ""
    actions {
      ops {
        functionName: "Open Starting Scene"
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5b512306336332c42a786788"
  }
  index: 3
  text: "Re-initiate conversation with me."
  branches {
    responseText: ""
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "OMFG_ITS_KANE"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "KANE_FUNC"
            }
          }
        }
        args {
          string_value: "ACT"
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5b512cb3336332c42a78681c"
  }
  index: 4
  text: "I\'m sorry. I\'m not sure."
  branches {
    responseText: ""
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "Berlin:ui"
          }
          args {
            string_value: "Tally"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5b512582336332c42a7867c8"
  }
  index: 5
  text: "We\'re currently in Act $(story.JAF_STAGE).\n\n{{GM}}He makes a C with his hand.{{/GM}}\n\nCounting from 0 and so on to: $(story.JAF_STAGE)"
  branches {
    responseText: "{{GM}}Switch to Prologue.{{/GM}}"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "545e82f23362655810005f46"
            }
            args {
              string_value: "JAF_STAGE"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "545e82f23362655810005f46"
            }
            args {
              string_value: "JAF_STAGE"
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 5
    auxiliaryLink: true
  }
  branches {
    responseText: "{{GM}}Switch to Act 1.{{/GM}}"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "545e82f23362655810005f46"
            }
            args {
              string_value: "JAF_STAGE"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "545e82f23362655810005f46"
            }
            args {
              string_value: "JAF_STAGE"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 6
  }
  branches {
    responseText: "Uh, take me back to Seattle."
    nextNodeIndex: 7
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5b512961336332c42a7867f4"
  }
  index: 6
  text: "What side missions have you done?"
  branches {
    responseText: "Yakuza Lab."
    conditions {
      ops {
        functionName: "Match (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
            }
            args {
              string_value: "CurrentSideMissionsDone"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "A"
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "545e82f23362655810005f46"
            }
            args {
              string_value: "CurrentSideMissionsDone"
            }
          }
        }
        args {
          call_value {
            functionName: "Append (string)"
            args {
              string_value: "A"
            }
            args {
              call_value {
                functionName: "Get Story Variable (string)"
                args {
                }
                args {
                  string_value: "CurrentSideMissionsDone"
                }
              }
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "Ranier Innovations."
    conditions {
      ops {
        functionName: "Match (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
            }
            args {
              string_value: "CurrentSideMissionsDone"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "B"
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "545e82f23362655810005f46"
            }
            args {
              string_value: "CurrentSideMissionsDone"
            }
          }
        }
        args {
          call_value {
            functionName: "Append (string)"
            args {
              string_value: "B"
            }
            args {
              call_value {
                functionName: "Get Story Variable (string)"
                args {
                }
                args {
                  string_value: "CurrentSideMissionsDone"
                }
              }
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "I\'m done hacking reality."
    nextNodeIndex: 5
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5b512c67336332c42a786818"
  }
  index: 7
  text: "Until we meet again, Great Developer."
  branches {
    responseText: ""
    actions {
      ops {
        functionName: "Open Scene"
        args {
          call_value {
            functionName: "Get Map Item (Scene)"
            args {
              string_value: "00-Sybrespace"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "OMFG_ITS_KANE"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 0
  comment: "entry"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "KANE_FUNC"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "ACT"
      }
    }
  }
  nextNodeIndex: 5
  comment: "act switch"
}
