triggers {
  name: "OnMapStart_s0"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "545e82f23362655810005f46"
          }
          args {
            string_value: "JAF_STAGE"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5473a345336265f013001e21"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Nuyen"
      args {
        int_value: 3000
      }
    }
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "54651f90336265d00a000121"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Waypoint on Actor"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "54651f90336265d00a000121"
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Talk to Wiseman"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "547374a2336265dc17001e27"
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "00_pin_code"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5927785a6463307c13001b26"
          }
        }
      }
    }
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "592d6d57646330a01b002834"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "592d7ad3646330a01b002893"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5463e6c7336265d817004d3f"
  }
  elseActions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "54652192336265d00a000124"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  is_oneshot: true
}
triggers {
  name: "OnMapStart_s1"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "545e82f23362655810005f46"
          }
          args {
            string_value: "JAF_STAGE"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "547e40f03362651c0d006e5f"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5473a345336265f013001e21"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "547e3ded336265c00e0020b8"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "548487a2336265480f0045ab"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "548488f2336265480f0045ad"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5484f85f336265a40a005ec8"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "547e13f3336265d811005e4a"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "593c919d646330f018006b9b"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54652192336265d00a000124"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "OnMapStart_amb"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5473a2d4336265f013001e20"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "sexy"
          }
          args {
            string_value: "sexy"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5473a2d4336265f013001e20"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Berlin:General/standing_idle_dancing"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5473a466336265f013001e22"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "sexy"
          }
          args {
            string_value: "sexy"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5473a466336265f013001e22"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Berlin:General/standing_idle_dancing"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5473a500336265f013001e23"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "sexy"
          }
          args {
            string_value: "sexy"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5473a500336265f013001e23"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Berlin:General/standing_idle_dancing"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5473a53f336265f013001e24"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "sexy"
          }
          args {
            string_value: "sexy"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5473a53f336265f013001e24"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Berlin:General/standing_idle_dancing"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5473a345336265f013001e21"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Wiseman_doExit"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Order Actor to Move To (Region)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "54651f90336265d00a000121"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5465387f3362653c15005d31"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "546538963362653c15005d32"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Wiseman_exitScene"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5465387f3362653c15005d31"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Match (string)"
      args {
        call_value {
          functionName: "Get Actor Name"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Wiseman"
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Specified Point (2D)"
          args {
            float_value: 83
          }
          args {
            float_value: 22
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "s0_wisemanhasleft"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "54653c593362653c15005ddf"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "546538dd3362653c15005d33"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "546538dd3362653c15005d33"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Wiseman_s0_convoEnd"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Talk to Wiseman"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Clear Waypoint from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "54651f90336265d00a000121"
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Head to the Tenpenny Tenements"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "546538963362653c15005d32"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "54653c593362653c15005ddf"
          }
        }
      }
      args {
        call_value {
          functionName: "Specified Point (2D)"
          args {
            float_value: 115
          }
          args {
            float_value: 75
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54653ad33362653c15005d83"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Bouncer_byElev"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "547de639336265400e0012a6"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "547de639336265400e0012a6"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Elevator is for VIP. You try to use without code, and I throw you out."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 5
      }
      args {
        float_value: 4
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "547de6f1336265400e0012a8"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Bouncer_byEnt_s0_speakstring"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "592778c46463307c13001b27"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Actor is Player Controlled"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "547de6d7336265400e0012a7"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Oh, you\'re one a\' Venovski\'s boys, eh? G\'ahead..."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 5
      }
      args {
        float_value: 4
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: false
  idRef {
    id: "5927785a6463307c13001b26"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Elevator_GroundFloor"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5255cff4663661a01300420e"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "547de856336265400e0012ab"
          }
        }
      }
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "547de7b2336265400e0012aa"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Elevator_TopFloor"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "547dee5b336265e811006c7f"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "547dee73336265e811006c80"
          }
        }
      }
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "547deeea336265e811006c90"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Elevator_Transit_toTop"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Fade Camera Out"
      args {
        float_value: 0.5
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Add Camera Point of Interest (Point)"
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "547debbb336265e811006c6a"
              }
            }
          }
        }
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors Within Area"
          args {
            call_value {
              functionName: "Area: Region"
              args {
                call_value {
                  functionName: "Get Map Item (Region)"
                  args {
                    string_value: "547def46336265e811006c91"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "547debbb336265e811006c6a"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "ambient_office"
          }
          args {
            string_value: "ElevatorDing"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Fade Camera In"
      args {
        float_value: 0.5
      }
      args {
        float_value: 0.5
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Sybrespace, Restricted VIP, Top Floor."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 4
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "current_floor"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "548e3fc7336265bc10002f7c"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "547debda336265e811006c6b"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Elevator_Transit_toGround"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Fade Camera Out"
      args {
        float_value: 0.5
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Add Camera Point of Interest (Point)"
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "547def46336265e811006c91"
              }
            }
          }
        }
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors Within Area"
          args {
            call_value {
              functionName: "Area: Region"
              args {
                call_value {
                  functionName: "Get Map Item (Region)"
                  args {
                    string_value: "547debbb336265e811006c6a"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "547def46336265e811006c91"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "ambient_office"
          }
          args {
            string_value: "ElevatorDing"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Fade Camera In"
      args {
        float_value: 0.5
      }
      args {
        float_value: 0.5
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Sybrespace, Public Club, Ground Floor."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 4
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "current_floor"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "548e3fc7336265bc10002f7c"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "547def5d336265e811006c92"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Elevator_enableCameraActors"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "current_floor"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  actions {
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "camera_npc"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "548e3fc7336265bc10002f7c"
  }
  elseActions {
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "camera_npc"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "YourStash_Access"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5483a8fc336265340d001b64"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Open Equip Screen"
    }
  }
  isActive: true
  idRef {
    id: "5483a8d9336265340d001b62"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Fixer_s1_payBB"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Add Nuyen"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "bypassbox_payment"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "547e3c26336265c00e001f83"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "YakJon_s1_spawn"
  events {
  }
  conditions {
    ops {
      functionName: "Match (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
          }
          args {
            string_value: "CurrentSideMissionsDone"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "A"
      }
    }
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "547e3e3e336265c00e0020b9"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "547e3ded336265c00e0020b8"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "AfterMission00"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "545e82f23362655810005f46"
          }
          args {
            string_value: "S1_justdidm00"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5255cff4663661a01300420e"
          }
        }
      }
    }
    ops {
      functionName: "Set Waypoint on Actor"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "547e1490336265d811005e4c"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "545e82f23362655810005f46"
          }
          args {
            string_value: "S1_justdidm00"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "547e40f03362651c0d006e5f"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "S1_MisA_enable"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Add Nuyen"
      args {
        int_value: 3000
      }
    }
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "547dee5b336265e811006c7f"
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "547f45013362657407006f6a"
          }
        }
      }
      args {
        call_value {
          functionName: "Specified Point (2D)"
          args {
            float_value: 115
          }
          args {
            float_value: 75
          }
        }
      }
    }
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "547f45013362657407006f6a"
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Gather a team and head to the Yakuza Lab."
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "547f44a73362657407006f68"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "S1_MisB_enable"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "545e82f23362655810005f46"
          }
          args {
            string_value: "CurrentSideMission"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "startmission"
          }
        }
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "545e82f23362655810005f46"
          }
          args {
            string_value: "SIDEMIS_stage"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "547dee5b336265e811006c7f"
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5487dc60336265a40b0043a6"
          }
        }
      }
      args {
        call_value {
          functionName: "Specified Point (2D)"
          args {
            float_value: 115
          }
          args {
            float_value: 75
          }
        }
      }
    }
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5487dc60336265a40b0043a6"
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Gather a team and head to the Tacoma district."
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "548511e23362650821001f78"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "FuchJon_s1_spawn"
  events {
  }
  conditions {
    ops {
      functionName: "AND"
      args {
        call_value {
          functionName: "Comparison (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "545e82f23362655810005f46"
              }
              args {
                string_value: "STAGE_SideMsnDid"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Comparison Ops"
              }
              args {
                int_value: 3
              }
            }
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Comparison (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "545e82f23362655810005f46"
              }
              args {
                string_value: "STAGE_SideMsnDid"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Comparison Ops"
              }
              args {
                int_value: 4
              }
            }
          }
          args {
            int_value: 3
          }
        }
      }
    }
    ops {
      functionName: "Match (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
          }
          args {
            string_value: "CurrentSideMissionsDone"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "B"
      }
    }
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "5484a197336265600d002e41"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5484a197336265600d002e41"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "relaxed"
          }
          args {
            string_value: "calm"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5484a197336265600d002e41"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Berlin:General/standing_idle_smoking"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "548487a2336265480f0045ab"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "FedBoe_s1_spawn"
  events {
  }
  conditions {
    ops {
      functionName: "AND"
      args {
        call_value {
          functionName: "Comparison (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "545e82f23362655810005f46"
              }
              args {
                string_value: "STAGE_SideMsnDid"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Comparison Ops"
              }
              args {
                int_value: 2
              }
            }
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Comparison (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "545e82f23362655810005f46"
              }
              args {
                string_value: "STAGE_SideMsnDid"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Comparison Ops"
              }
              args {
                int_value: 4
              }
            }
          }
          args {
            int_value: 3
          }
        }
      }
    }
    ops {
      functionName: "Match (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
          }
          args {
            string_value: "CurrentSideMissionsDone"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "C"
      }
    }
  }
  actions {
  }
  isActive: true
  idRef {
    id: "548488f2336265480f0045ad"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Ghamal_s1_spawn"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "545e82f23362655810005f46"
          }
          args {
            string_value: "01_ghamal_hasjoined"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "5484f82b336265a40a005ec7"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5484f85f336265a40a005ec8"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Shell_s0_ttp"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "592d7a3f646330a01b002892"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Actor is Player Controlled"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "592d6dc2646330a01b002835"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "592d6d57646330a01b002834"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "592d7ad3646330a01b002893"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Shell_s0_follower"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "592d6d57646330a01b002834"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "592d7b3e646330a01b002894"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "OnMapStart_Kane"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "545e82f23362655810005f46"
          }
          args {
            string_value: "RELEASE"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "5b50def9336332050d2dc35e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5b50e11d336332050d2dc35f"
  }
  elseActions {
  }
  is_oneshot: true
}
regions {
  name: "KAMERA"
  position {
    x: 62
    y: 38
    width: 71
    height: 69
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "545e9128336265f82200329a"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.81176472
    b: 0.78823531
    a: 0.86274511
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.24313726
    b: 0.49019608
    a: 1
  }
  ambience_template: "bar-busy"
  combat_music: ""
  default_music: "Berlin-Club01"
  loop_combat_music: true
  loop_default_music: true
  no_fow_in_region: false
}
regions {
  name: "Wiseman_exitScene"
  position {
    x: 116
    y: 74
    width: 1
    height: 4
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5465387f3362653c15005d31"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "KAMERA-TOPVIP"
  position {
    x: 83
    y: 206
    width: 55
    height: 81
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "547d444d3362650412001c33"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.52941179
    g: 0.42352942
    b: 0.54901963
    a: 1
  }
  ambient_light_color {
    r: 0.36862746
    g: 0.29411766
    b: 0.38039216
    a: 1
  }
  ambience_template: "bar-quiet"
  combat_music: ""
  default_music: "Seattle-Bar22"
  loop_combat_music: true
  loop_default_music: true
  no_fow_in_region: false
}
regions {
  name: "TopFloor_ElevRegion"
  position {
    x: 106
    y: 219
    width: 4
    height: 3
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "547debbb336265e811006c6a"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "GroundFloor_ElevRegion"
  position {
    x: 92
    y: 50
    width: 4
    height: 3
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "547def46336265e811006c91"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "S0_BouncerCommentor"
  position {
    x: 108
    y: 74
    width: 2
    height: 4
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "592778c46463307c13001b27"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "S0_ShellDialog"
  position {
    x: 101
    y: 74
    width: 4
    height: 4
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "592d7a3f646330a01b002892"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 114
    y: 0
    z: 75
  }
  orientation: ORIENTATION_N
  idRef {
    id: "545e83fa3362655810005f47"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 0
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 96
    y: 0
    z: 72
  }
  orientation: ORIENTATION_E
  idRef {
    id: "545e8f65336265f822003297"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 2
    conversationPoint {
      conversationID: "545e8c743362655810005f4a"
      turnToFace: false
    }
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Security/HumanMaleExecSecurity"
    character_sheet_id: "BaseCivilian"
    equipment_sheet_id: "Merchant_Tech_High"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Jazz"
    }
    equipment {
      prefab_name: "Kamikaze"
    }
    equipment {
      prefab_name: "Berlin_Cram"
    }
    equipment {
      prefab_name: "Player_DeckerStarter"
    }
    equipment {
      prefab_name: "Jazz"
    }
    equipment {
      prefab_name: "Berlin_Cram"
    }
    team_id: "Civilians"
    char_name: "Jack"
    pc_spawn_number: -1
    portrait {
      filename: "pc_humanmale_03b_african"
    }
    portrait_code_override: "s6h5c4b0c0t0"
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 84
    y: 0
    z: 83
  }
  orientation: ORIENTATION_S
  idRef {
    id: "5463f0243362653c1700123a"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    conversationPoint {
      conversationID: "5463edc7336265d817004d9c"
      turnToFace: true
    }
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/OrkFemale"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Outfit_Scientist"
    }
    equipment {
      prefab_name: "HealthPack"
    }
    equipment {
      prefab_name: "HealthPack"
    }
    equipment {
      prefab_name: "HealthPack"
    }
    equipment {
      prefab_name: "HealthPack_med"
    }
    equipment {
      prefab_name: "HealthPack_med"
    }
    equipment {
      prefab_name: "HealthPack_hi"
    }
    equipment {
      prefab_name: "HealthPack_hi"
    }
    equipment {
      prefab_name: "DocWagonBasic"
    }
    equipment {
      prefab_name: "DocWagonBasic"
    }
    equipment {
      prefab_name: "DocWagonGold"
    }
    equipment {
      prefab_name: "DocWagonGold"
    }
    team_id: "Civilians"
    char_name: "Talya"
    pc_spawn_number: -1
    cyberware_left_arm: "Obvious Cyberarm"
    cyberware_right_arm: "Obvious Cyberarm"
    portrait {
      filename: "pc_orkfemale_05_blondedreads"
    }
    portrait_code_override: "s4h3c1b0c0t0"
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 75
    y: 0
    z: 71
  }
  orientation: ORIENTATION_E
  displayName: "wiseman_stage0"
  idRef {
    id: "54651f90336265d00a000121"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    conversationPoint {
      conversationID: "54652227336265d00a000125"
      turnToFace: true
    }
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/HumanMale"
    character_sheet_id: "CG Human Decker"
    character_mod {
      stats {
        body: 1
        quickness: 2
        strength: 0
        charisma: 0
        intelligence: 2
        willpower: 0
        essence: 0
        magic: 0
        hp: 10
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 3
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 4
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 2
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 4
        drone_combat: 0
      }
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Player_DeckerJacket"
    }
    equipment {
      prefab_name: "Berlin_CyberdeckVirtuaX"
    }
    equipment {
      prefab_name: "AR 1 AK98 (Smartlink)"
    }
    equipment {
      prefab_name: "Jazz"
    }
    equipment {
      prefab_name: "Berlin_Bliss"
    }
    equipment {
      prefab_name: "HealthPack_med"
    }
    equipment {
      prefab_name: "Grenade 2 (Flash)"
    }
    equipment {
      prefab_name: "Berlin_ESP Kamikaze"
    }
    equipment {
      prefab_name: "Berlin_ESP Shield"
    }
    equipment {
      prefab_name: "Berlin_PR Erosion 2"
    }
    equipment {
      prefab_name: "Berlin_PR Killer 3"
    }
    equipment {
      prefab_name: "Berlin_PR Blaster 2"
    }
    equipment {
      prefab_name: "Berlin_PR Supression 1"
    }
    equipment {
      prefab_name: "Berlin_PR Sniffer 2"
    }
    team_id: "Civilians"
    char_name: "Wiseman"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    cyberware_eyes: "Berlin_Eye Datajack"
    cyberware_jack: "Pain Editor"
    portrait {
      filename: "npc_humanmale_alnur"
    }
    description_bio: "Highly-skilled decker with a helping of common sense."
    portrait_code_override: "s6h3c8b0c0t0"
    karma: 4
    hiring_cost_override: 0
    hiring_tag: "crew"
    id: "wiseman_level1"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 104
    y: 0
    z: 66
  }
  orientation: ORIENTATION_E
  idRef {
    id: "546f782a336265b00b003fce"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    conversationPoint {
      conversationID: "546f786f336265b00b003fcf"
      turnToFace: false
    }
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Story/WeaponsDealer"
    character_sheet_id: "BaseCivilian"
    equipment_sheet_id: "Merchant_Weapons_High"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_paranormal: 0
        etiquette_socialite: 0
        etiquette_infected: 0
        chi_casting: 0
        drain_resistance: 0
        drone_combat: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        throwing_blades: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Berlin_AR 2 FN HAR (Smartlink)"
    }
    team_id: "Civilians"
    char_name: "D.J."
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "npc_humanfemale_weaponstechdealer"
    }
    karma: 6
    hiring_cost_override: 500
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 109.4
    y: 0
    z: 68.3
  }
  orientation: ORIENTATION_E
  displayName: "dancing_grill_01"
  idRef {
    id: "5473a2d4336265f013001e20"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Extras/HumanFemaleDancer"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Grill"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 6
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 109.4
    y: 0
    z: 82.4
  }
  orientation: ORIENTATION_N
  displayName: "dancing_grill_02"
  idRef {
    id: "5473a466336265f013001e22"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Extras/ElfFemaleDancer"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Grill"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 6
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 78.4
    y: 0
    z: 66.4
  }
  orientation: ORIENTATION_N
  displayName: "dancing_grill_03"
  idRef {
    id: "5473a500336265f013001e23"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Extras/ElfFemaleDancer"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Grill"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 6
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 79.3
    y: 0
    z: 81.3
  }
  orientation: ORIENTATION_S
  displayName: "dancing_grill_04"
  idRef {
    id: "5473a53f336265f013001e24"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Extras/ElfFemaleProstitute"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Grill"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 6
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 92
    y: 0
    z: 56
  }
  orientation: ORIENTATION_E
  displayName: "bouncer_f1_elev"
  idRef {
    id: "547de639336265400e0012a6"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    interactionIcon: InteractionIcon_Conversation
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Security/TrollMalesSecurity"
    character_sheet_id: "CG Troll Adept"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Bouncer"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 40
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 109
    y: 0
    z: 74
  }
  orientation: ORIENTATION_E
  displayName: "Entrance_Bouncer"
  idRef {
    id: "547de6d7336265400e0012a7"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Security/TrollMalesSecurity"
    character_sheet_id: "CG Troll Adept"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Bouncer"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 40
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 85
    y: 0
    z: 20
  }
  orientation: ORIENTATION_E
  displayName: "terminal_portrait_npc"
  idRef {
    id: "547e093e336265d811005e12"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/TrollMale"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: -75
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Terminal"
    pc_spawn_number: -1
    portrait {
      filename: "generic_esp_kamikaze"
    }
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 95
    y: 0
    z: 239
  }
  orientation: ORIENTATION_W
  displayName: "wiseman_stage1"
  idRef {
    id: "547e13f3336265d811005e4a"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/HumanMale"
    character_sheet_id: "CG Human Decker"
    character_mod {
      stats {
        body: 1
        quickness: 2
        strength: 0
        charisma: 0
        intelligence: 2
        willpower: 0
        essence: 0
        magic: 0
        hp: 10
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 3
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 4
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 2
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 4
        drone_combat: 0
      }
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Player_DeckerJacket"
    }
    equipment {
      prefab_name: "Berlin_CyberdeckVirtuaX"
    }
    equipment {
      prefab_name: "AR 1 AK98 (Smartlink)"
    }
    equipment {
      prefab_name: "Jazz"
    }
    equipment {
      prefab_name: "Berlin_Bliss"
    }
    equipment {
      prefab_name: "HealthPack_med"
    }
    equipment {
      prefab_name: "Grenade 2 (Flash)"
    }
    equipment {
      prefab_name: "Berlin_ESP Kamikaze"
    }
    equipment {
      prefab_name: "Berlin_ESP Shield"
    }
    equipment {
      prefab_name: "Berlin_PR Erosion 2"
    }
    equipment {
      prefab_name: "Berlin_PR Killer 3"
    }
    equipment {
      prefab_name: "Berlin_PR Blaster 2"
    }
    equipment {
      prefab_name: "Berlin_PR Supression 1"
    }
    equipment {
      prefab_name: "Berlin_PR Sniffer 2"
    }
    team_id: "Civilians"
    char_name: "Wiseman"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    cyberware_eyes: "Berlin_Eye Datajack"
    cyberware_jack: "Pain Editor"
    portrait {
      filename: "npc_humanmale_alnur"
    }
    description_bio: "Highly-skilled decker with a helping of common sense."
    portrait_code_override: "s6h3c8b0c0t0"
    karma: 4
    hiring_cost_override: 0
    hiring_tag: "crew"
    id: "wiseman_level1"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 110
    y: 0
    z: 248
  }
  orientation: ORIENTATION_S
  idRef {
    id: "547e1490336265d811005e4c"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    conversationPoint {
      conversationID: "547e26ec336265c00e001e20"
      turnToFace: false
    }
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/HumanMale"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "RiggerTrenchcoat"
    }
    team_id: "Civilians"
    char_name: "Mr. Vnevoski"
    pc_spawn_number: -1
    portrait {
      filename: "npc_humanmale_vauclair"
    }
    description_bio: "Don\'t fuck with this fixer."
    portrait_code_override: "s6h6c1b0c0t0"
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 114
    y: 0
    z: 244
  }
  orientation: ORIENTATION_W
  displayName: "yakuza_johnson"
  idRef {
    id: "547e3e3e336265c00e0020b9"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    prerequisites {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
            }
            args {
              string_value: "CurrentSideMission"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "A"
        }
      }
    }
    conversationPoint {
      conversationID: "547e3f97336265c00e0020ee"
      turnToFace: true
    }
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Wealthy/HumanMaleAutumnPony"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Mr. Takeshi"
    enabled_at_start: false
    pc_spawn_number: -1
    portrait {
      filename: "backerpc_humanmale_robertbowling_dashyoung"
    }
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 74
    y: 0
    z: 85
  }
  orientation: ORIENTATION_S
  idRef {
    id: "5483a97c336265340d001b66"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    conversationPoint {
      conversationID: "5483a996336265340d001b67"
      turnToFace: false
    }
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Story/MagicDealer"
    character_sheet_id: "BaseCivilian"
    equipment_sheet_id: "Berlin_Merchant_Magic_3"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_paranormal: 0
        etiquette_socialite: 0
        etiquette_infected: 0
        chi_casting: 0
        drain_resistance: 0
        drone_combat: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        throwing_blades: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Adept_Improved Melee"
    }
    equipment {
      prefab_name: "Adept_Improved Ranged"
    }
    equipment {
      prefab_name: "Adept_Improved Reflexes"
    }
    equipment {
      prefab_name: "Adept_Improved Senses"
    }
    team_id: "Civilians"
    char_name: "Aurellius"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "NPC_ElfMale_MagicDealer"
    }
    karma: 6
    hiring_cost_override: 500
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 105
    y: 0
    z: 239
  }
  orientation: ORIENTATION_S
  displayName: "fuchi_johnson"
  idRef {
    id: "5484a197336265600d002e41"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    prerequisites {
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Comparison (string)"
            args {
              call_value {
                functionName: "Get Story Variable (string)"
                args {
                  string_value: "545e82f23362655810005f46"
                }
                args {
                  string_value: "CurrentSideMission"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              string_value: "B"
            }
          }
        }
        args {
          call_value {
            functionName: "Comparison (string)"
            args {
              call_value {
                functionName: "Get Variable (string)"
                args {
                  string_value: "startmission"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              string_value: "B"
            }
          }
        }
      }
    }
    conversationPoint {
      conversationID: "5484a31e336265600d002e42"
      turnToFace: false
    }
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/ElfFemale"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Outfit_Corporate Salaryman"
    }
    team_id: "Civilians"
    char_name: "Mrs. Johnson"
    enabled_at_start: false
    pc_spawn_number: -1
    portrait {
      filename: "pc_elffemale_10a_punkdecker"
    }
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 114
    y: 0
    z: 230
  }
  orientation: ORIENTATION_S
  displayName: "ghamal_stage1"
  idRef {
    id: "5484f82b336265a40a005ec7"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/OrkMale"
    character_sheet_id: "CG Ork Shaman"
    character_mod {
      stats {
        body: 0
        quickness: 3
        strength: 0
        charisma: 2
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 1
        armor: 4
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 3
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 4
        spirit_summoning: 4
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 3
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 4
        esp_control: 0
        drone_combat: 0
      }
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "TotemEagle"
    }
    equipment {
      prefab_name: "Player_ShamanUrban"
    }
    equipment {
      prefab_name: "Berlin_Spell Fog"
    }
    equipment {
      prefab_name: "Berlin_Spell Haste 3"
    }
    equipment {
      prefab_name: "Bound Air Spirit 4"
    }
    equipment {
      prefab_name: "Bound Nature Spirit 4"
    }
    equipment {
      prefab_name: "Berlin_Sh 2 Mossberg CMDT"
    }
    equipment {
      prefab_name: "HealthPack_med"
    }
    equipment {
      prefab_name: "HealthPack_med"
    }
    equipment {
      prefab_name: "Grenade (Smoke)"
    }
    equipment {
      prefab_name: "Grenade 1 (Flash)"
    }
    team_id: "Civilians"
    char_name: "Ghamal"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    cyberware_eyes: "Vision Magnification Eyes"
    portrait {
      filename: "pc_orkmale_06_blondetusks"
    }
    description_bio: "Orcish Shaman who\'s a Runner and a Paranormal Investigator. He prefers Spirit Detective."
    karma: 5
    hiring_cost_override: 0
    hiring_tag: "Crew / Spirit Detective"
    id: "ghamal_level2"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 125
    y: 0
    z: 269
  }
  orientation: ORIENTATION_W
  GeneralTags: "camera_npc"
  idRef {
    id: "548e3ebc336265bc10002f77"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/InvisibleActor"
    character_sheet_id: "BaseTemplate"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 1
        ap: -2
        armor: 1
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 3
        vision_cone_distance: 7
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "OutsideKameraNPC"
    GeneralTags: "camera_npc"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 0
    is_prop_character: false
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 133
    y: 0
    z: 251
  }
  orientation: ORIENTATION_N
  GeneralTags: "camera_npc"
  idRef {
    id: "548e3f5e336265bc10002f7b"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/InvisibleActor"
    character_sheet_id: "BaseTemplate"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 1
        ap: -2
        armor: 1
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 3
        vision_cone_distance: 7
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "OutsideKameraNPC"
    GeneralTags: "camera_npc"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 0
    is_prop_character: false
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 101
    y: 0
    z: 75
  }
  orientation: ORIENTATION_S
  displayName: "shell_stage0"
  idRef {
    id: "592d6d57646330a01b002834"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/HumanFemale"
    character_sheet_id: "CG Human Street Samurai"
    equipment_sheet_id: "shell_equipment_lvl1"
    character_mod {
      stats {
        body: 0
        quickness: 2
        strength: 2
        charisma: 0
        intelligence: -1
        willpower: 0
        essence: 0
        magic: 0
        hp: 5
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 4
        close_combat: 2
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 1
        dodge: 3
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 1
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 5
        edged: 1
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Shell"
    GeneralTags: "isShell"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Normal
    hiring_type: HiringType_Hireable
    ready_priority: 0
    cyberware_jack: "Datajack"
    portrait {
      filename: "human_female_weapons-spec"
    }
    description_bio: "Ex-Ganger. Not the brightest flourostick in the box; but, She\'s one mean, novahot Street Sam."
    portrait_code_override: "s6h16c5b0c0t0"
    karma: 4
    hiring_cost_override: 0
    hiring_tag: "Crew / Street Samurai"
    id: "shell_level1"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 94
    y: 0
    z: 74
  }
  orientation: ORIENTATION_W
  displayName: "shell_stage1"
  idRef {
    id: "593c919d646330f018006b9b"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/HumanFemale"
    character_sheet_id: "CG Human Street Samurai"
    equipment_sheet_id: "shell_equipment_lvl1"
    character_mod {
      stats {
        body: 0
        quickness: 2
        strength: 2
        charisma: 0
        intelligence: -1
        willpower: 0
        essence: 0
        magic: 0
        hp: 5
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 4
        close_combat: 2
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 1
        dodge: 3
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 1
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 5
        edged: 1
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Shell"
    GeneralTags: "isShell"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Normal
    hiring_type: HiringType_Hireable
    ready_priority: 0
    cyberware_jack: "Datajack"
    portrait {
      filename: "human_female_weapons-spec"
    }
    description_bio: "Ex-Ganger. Not the brightest flourostick in the box; but, She\'s one mean, novahot Street Sam."
    portrait_code_override: "s6h16c5b0c0t0"
    karma: 4
    hiring_cost_override: 0
    hiring_tag: "Crew / Street Samurai"
    id: "shell_level1"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 97
    y: 0
    z: 231.5
  }
  orientation: ORIENTATION_S
  displayName: "cyberware_saleswoman"
  idRef {
    id: "5b4de55d336332103cf20ee3"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    conversationPoint {
      conversationID: "5b4de3393333323c3af20eda"
      turnToFace: true
    }
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Scientist/HumanFemaleScientist"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Serena Gutierrez"
    pc_spawn_number: -1
    portrait {
      filename: "backer_humanfemale_grahamwilliams_tsilonsiereht"
    }
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 74
    y: 0
    z: 78
  }
  orientation: ORIENTATION_S
  displayName: "debug_kane"
  idRef {
    id: "5b50def9336332050d2dc35e"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    conversationPoint {
      conversationID: "5b50e1b6663332050d2dc360"
      turnToFace: true
    }
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Story/HansBrackhaus"
    character_sheet_id: "CG Human Mage"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Kane"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "npc_humanmale_hansbrackhaus"
    }
    portrait_code_override: ""
    karma: 34
    hiring_cost_override: 1000
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "medical_tlkonce"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "s0_wisemanhasleft"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "weapons_tlkonce"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bypassbox_payment"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "askabtws"
    typeName: "bool"
  }
}
variables {
  string_value: "none"
  variableref_value {
    scope: TsVariableScope_Scene
    name: "startmission"
    typeName: "string"
  }
}
variables {
  string_value: ""
  variableref_value {
    scope: TsVariableScope_Scene
    name: "smith"
    typeName: "string"
  }
}
variables {
  int_value: 1
  variableref_value {
    scope: TsVariableScope_Scene
    name: "current_floor"
    typeName: "int"
  }
}
goals {
  name: "Talk to Wiseman"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Head to the Tenpenny Tenements"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Gather a team and head to the Yakuza Lab."
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Gather a team and head to the Tacoma district."
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
worldMapLocation {
  filename: ""
  location {
    x: 0
    y: 0
  }
}
mapName: "00-Sybrespace"
parentStory: ""
scene_title: "Sybrespace -- Downtown, Seattle"
scene_subtitle: ""
scene_synopsis: "Not a place for the mild-mannered or the meek of heart, Syberspace\'s neon lights and put it at the leading edge of downtown nightlife\n\nBut that\'s not all, chummer, Sybrespace, for those in the know, doubles as a safehouse and haven for those who run in either the bits or shadows."
scene_image: "loadingimage_a1_hotel_s1"
scene_continue_button_skip: false
scene_restore_runner_health: false
directional_light_dir {
  x: -0.5
  y: -1
  z: -0.75
}
directional_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
ambient_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
allow_drawn_weapons: false
team_affiliations {
  team_name: "Shadowrunners"
  affiliation: 0
  affiliation: 1
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "Gangers"
  affiliation: 1
  affiliation: 0
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "LoneStar"
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Civilians"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
scene_dimensions {
  dimension_name: "Default"
}
character_roster {
}
show_hiring_screen_on_scene_load: false
scene_hiring_prerequisites {
  prereq_description: ""
  prereq_conditions {
  }
}
hiring_slot_count: 1
hiring_minimum_karma: 0
hiring_maximum_karma: 8
hire_from_content_pack: "518d7672643431b03f0041aa"
hire_from_content_pack: "53472c8f3234370824006c6a"
roster_overrides {
}
use_hiring_cost_warning: false
hiring_average_cost: 0
override_hiring_average_cost: false
show_equip_screen_on_scene_load: false
is_persistant: false
is_persistant_has_value: false
can_move_outside_camera_regions: true
can_start_before_triggers: false
can_use_team_advancement: false
