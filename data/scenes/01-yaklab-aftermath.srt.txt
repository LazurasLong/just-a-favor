triggers {
  name: "OnMapStart"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5b7f77463363322d2a101371"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "repairing"
          }
          args {
            string_value: "repairing"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5b7f77463363322d2a101371"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_idle_repairing"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation Stance"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5b7f790a3363322d2a101372"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "StanceType"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5b7f790a3363322d2a101372"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "relaxed"
          }
          args {
            string_value: "calm"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5b7f790a3363322d2a101372"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:Human/Female/crouch_idle"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5b845937336332f11b140539"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "repairing"
          }
          args {
            string_value: "repairing"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5b845937336332f11b140539"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_idle_repairing"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "54847100336265840a006e69"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "examine"
          }
          args {
            string_value: "examine"
          }
        }
      }
    }
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5484723f336265840a006e6c"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "54847169336265840a006e6a"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "S1mA_setGlobals"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "545e82f23362655810005f46"
          }
          args {
            string_value: "CurrentSideMission"
          }
        }
      }
      args {
        string_value: "none"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "545e82f23362655810005f46"
          }
          args {
            string_value: "CurrentSideMissionsDone"
          }
        }
      }
      args {
        call_value {
          functionName: "Append (string)"
          args {
            string_value: "A"
          }
          args {
            call_value {
              functionName: "Get Story Variable (string)"
              args {
              }
              args {
                string_value: "CurrentSideMissionsDone"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "545e82f23362655810005f46"
          }
          args {
            string_value: "STAGE_SideMsnDid"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "545e82f23362655810005f46"
          }
          args {
            string_value: "SIDEMIS_stage"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "545e82f23362655810005f46"
          }
          args {
            string_value: "wiseman_level"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "5484824f336265480f00444e"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "MakeVanTalk_onExit"
  events {
    ops {
      functionName: "On Region Exit"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5484ec59336265a40a005e16"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "54848513336265480f004528"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Boss! I think we were tailed here. Keep a sharp eye."
      }
      args {
        float_value: 0.44
      }
      args {
        float_value: 0.57
      }
      args {
        float_value: 0.75
      }
      args {
        float_value: 1
      }
      args {
        float_value: 5
      }
      args {
        float_value: 4.25
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "5484ec8b336265a40a005e17"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "DriveThru_takeOrder_0"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5484ee23336265a40a005e1a"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Gender"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Gender"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5484ee23336265a40a005e1a"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Hey, frag you man! If you want a McStuffer, you\'re gonna have to come inside like everyone else!"
      }
      args {
        float_value: 0.44
      }
      args {
        float_value: 0.57
      }
      args {
        float_value: 0.75
      }
      args {
        float_value: 1
      }
      args {
        float_value: 5
      }
      args {
        float_value: 4.25
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "5484ee64336265a40a005e1b"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "DriveThru_takeOrder_1"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5484ee23336265a40a005e1a"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Gender"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Gender"
          }
          args {
            int_value: 2
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5484ee23336265a40a005e1a"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Hey, frag you lady! If you want a McStuffer, you\'re gonna have to come inside like everyone else!"
      }
      args {
        float_value: 0.44
      }
      args {
        float_value: 0.57
      }
      args {
        float_value: 0.75
      }
      args {
        float_value: 1
      }
      args {
        float_value: 5
      }
      args {
        float_value: 4.25
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "5484eeb2336265a40a005e1c"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "MeetSpiritDetective_onEnter"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5484ed4f336265a40a005e18"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Order Actor to Move To (Actor)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5484efb0336265a40a005e40"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5484ef64336265a40a005e2e"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "MeetSpiritDetective_onEnter2"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5484ed4f336265a40a005e18"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5484efb0336265a40a005e40"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Start Conversation Between Actors"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5484f40b336265a40a005e63"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5484f9b6336265a40a005ecc"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "testam"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "545e82f23362655810005f46"
          }
          args {
            string_value: "JAF_STAGE"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "545e82f23362655810005f46"
          }
          args {
            string_value: "JAF_STAGE"
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5484e7a9336265a40a005e15"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Van_rearInteract"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "54848513336265480f004528"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5484efb0336265a40a005e40"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Control"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5484efb0336265a40a005e40"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PlayerOrAI"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Fade Camera Out"
      args {
        float_value: 0.5
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "weapons"
          }
          args {
            string_value: "GrenadeFrag"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "Berlin:ambient_mitte"
          }
          args {
            string_value: "ColdWind"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Camera Point of Interest (Actors)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        float_value: 1.5
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5b7e0cb0336332cd642b0e27"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "OverdriveComment"
          }
        }
      }
      args {
        float_value: 1.75
      }
    }
    ops {
      functionName: "Fade Camera In"
      args {
        float_value: 0.5
      }
      args {
        float_value: 1.25
      }
    }
  }
  isActive: true
  idRef {
    id: "5b7ae7893363322773540c29"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Top_to_Bottom"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5b7b5b113363328e07edbd1d"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Fade Camera Out"
      args {
        float_value: 0.5
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Add Camera Point of Interest (Actors)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5b7b58563363328e07edbd0e"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Fade Camera In"
      args {
        float_value: 0.5
      }
      args {
        float_value: 0.5
      }
    }
  }
  isActive: true
  idRef {
    id: "5a2fdfce333165042a000ee1"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Bottom_to_Top"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5b7b5a273363328e07edbd13"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Fade Camera Out"
      args {
        float_value: 0.5
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Add Camera Point of Interest (Actors)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5b7b5a363363328e07edbd14"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Fade Camera In"
      args {
        float_value: 0.5
      }
      args {
        float_value: 0.5
      }
    }
  }
  isActive: true
  idRef {
    id: "5b7b5a0e3363328e07edbd11"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "FYV_Enable"
  events {
    ops {
      functionName: "On Region Exit"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5b7e0cb0336332cd642b0e27"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Find a way to fix your van."
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Waypoint on Actor"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5b7ae72e3363322773540c28"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5b7e11a6336332cd642b0e70"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Overdrive_Comment"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "OverdriveComment"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5b7ae72e3363322773540c28"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Dunkelzahn\'s dick! We just blew something!"
      }
      args {
        float_value: 0.17
      }
      args {
        float_value: 0.59
      }
      args {
        float_value: 0.07
      }
      args {
        float_value: 1
      }
      args {
        float_value: 5
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "van_blew_up"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5b7eaee333633237227cc472"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "HMA_onEnter"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5b7f4542336332cb231405c3"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Clear All Waypoints"
    }
    ops {
      functionName: "Set Waypoint on Actor"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5b7f485d336332cb23140601"
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Talk to Horny Mike."
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5b7f4570336332cb231405c4"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "HM_Stroll"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Interrupt Team\'s Movement"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Move To (Point)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5b7f485d336332cb23140601"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Specified Point (2D)"
          args {
            float_value: -163
          }
          args {
            float_value: 12
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5b7f485d336332cb23140601"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "You\'re lucky. I have everything on this list. Follow me."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "5b7f720a3363322d2a1012ef"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "HMFE_onEnter"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5b7f71bd3363322d2a1012ee"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5b7f485d336332cb23140601"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Start Conversation Between Actors"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5b7f73443363322d2a1e1212"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5b7f485d336332cb23140601"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5b7f72d63363322d2a1012f0"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "EnableEncounter"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner By Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "encounter"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5b8486f9336332690c140556"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Face Direction"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
    }
    ops {
      functionName: "Set Animation Stance"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5b849c593363328a09140590"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "StanceType"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5b845fd0336332f11b140585"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "EncounterZone_Orchestrate"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5b848387336332690c140539"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Interrupt Team\'s Movement"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Add Camera Point of Interest (Actors)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5b8487ce336332690c140557"
              }
            }
          }
          args {
          }
        }
      }
      args {
        float_value: -1
      }
    }
    ops {
      functionName: "Start Conversation Between Actors"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5b8483ceee6332690c14053a"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5b8487ce336332690c140557"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5b8487ce336332690c140557"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5b8486f9336332690c140556"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "EncounterZone_Iterate"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "mstf_stage"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "EZ_Iterate"
          }
        }
      }
    }
    ops {
      functionName: "Interrupt Team\'s Movement"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5b848cb5336332690c140558"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "EncounterZone_1"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "EZ_Iterate"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "mstf_stage"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Order Actor to Move To (Point)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5b8494c03363328a09140539"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Specified Point (2D)"
          args {
            float_value: -134
          }
          args {
            float_value: 10
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
    }
    ops {
      functionName: "Start Conversation Between Actors"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5b8483ceee6332690c14053a"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5b8487ce336332690c140557"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5b8487ce336332690c140557"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5b84954a3363328a0914053a"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "EncounterZone_2"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "EZ_Iterate"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "mstf_stage"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  actions {
    ops {
      functionName: "Isolated Team Turn"
      args {
        call_value {
          functionName: "Team of Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5b845ff8336332f11b140586"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Order Actor to Move To (Region)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5b845ff8336332f11b140586"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5b84bb1a3363320c0b140569"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
    }
    ops {
      functionName: "Interrupt Team\'s Movement"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5b84ba9f3363320c0b140568"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "AyleDisappear"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5b84bb1a3363320c0b140569"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5b845ff8336332f11b140586"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "spellcasting"
          }
          args {
            string_value: "MagicDebuffHit"
          }
        }
      }
      args {
        float_value: 0.75
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Start Conversation Between Actors"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5b8483ceee6332690c14053a"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5b8487ce336332690c140557"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5b8487ce336332690c140557"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5b84bb823363320c0b14056a"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "EncounterZone_CleanUp"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Remove Camera Point of Interest (Actors)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5b8487ce336332690c140557"
              }
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5b8487ce336332690c140557"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "baddies"
              }
            }
          }
          args {
            call_value {
              functionName: "Nothing Selected"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5b849c593363328a09140590"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Control"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5b849c593363328a09140590"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PlayerOrAI"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "545e82f23362655810005f46"
          }
          args {
            string_value: "01_winterhawk_hasjoined"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5b856b863363322a0fc843e4"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5b8570183363322a0fc843e6"
          }
        }
      }
    }
    ops {
      functionName: "Isolated Team Turn"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  isActive: true
  idRef {
    id: "5b84bebd3363320c0b1405b6"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Van_Fixaroo"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5b84c7243363320c0b1406a1"
          }
        }
      }
    }
    ops {
      functionName: "On Region Exit"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5b84c7243363320c0b1406a1"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate If Actor Has Item"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "01a_parts"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "van_fixed_yet"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5b84c7553363320c0b1406a2"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5b84c7553363320c0b1406a2"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Van_Interact"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5b7ae7003363322773540c27"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate If Actor Has Item"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "01a_parts"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Success. Your vehicle is now ready to roll."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 5
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5b8568d53363322a0fc843e0"
          }
        }
      }
      args {
        call_value {
          functionName: "Specified Point (2D)"
          args {
            float_value: -155
          }
          args {
            float_value: -95
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5b7ae7003363322773540c27"
          }
        }
      }
      args {
        call_value {
          functionName: "Specified Point (2D)"
          args {
            float_value: -155
          }
          args {
            float_value: -95
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5b856af33363322a0fc843e3"
          }
        }
      }
      args {
        call_value {
          functionName: "Specified Point (3D)"
          args {
            float_value: -135.8
          }
          args {
            float_value: 1
          }
          args {
            float_value: -11.3
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5b8569073363322a0fc843e1"
  }
  elseActions {
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Failure. Stick to shadowrunning, kid. You can\'t fix a vehicle without parts."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 5
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "rs_ai01"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "ai_a"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Order Actor to Move To (Region)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5b8494c03363328a09140539"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5b856c5a3363322a0fc843e5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 8
          }
        }
      }
    }
    ops {
      functionName: "Enter/Exit Cover"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5b8494c03363328a09140539"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnterOrExit"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Attack Actor With Weapon"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5b8494c03363328a09140539"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Actor on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "ai_a"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5b856b863363322a0fc843e4"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "ci_ai01"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "ai_b"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Order Actor to Move To (Region)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5b8460d9336332f11b1405b5"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5b8571053363322a0fc843e8"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 6
          }
        }
      }
    }
    ops {
      functionName: "Enter/Exit Cover"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5b8460d9336332f11b1405b5"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnterOrExit"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "ai_b"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5b8570183363322a0fc843e6"
  }
  elseActions {
  }
  is_oneshot: true
}
regions {
  name: "Camera-EXTERIOR"
  position {
    x: -53
    y: -46
    width: 79
    height: 108
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "54835e72336265700e000392"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.34901962
    g: 0.34117648
    b: 0.38431373
    a: 1
  }
  ambient_light_color {
    r: 0.33333334
    g: 0.32156864
    b: 0.41960785
    a: 1
  }
  ambience_template: "haven-quiet"
  combat_music: ""
  default_music: "Seattle-Set7-Legwork"
  loop_combat_music: true
  loop_default_music: true
  no_fow_in_region: false
}
regions {
  name: "MakeVanTalk"
  position {
    x: -7
    y: 8
    width: 3
    height: 3
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5484ec59336265a40a005e16"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "MeetSpiritDetective"
  position {
    x: 9
    y: 5
    width: -36
    height: 12
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5484ed4f336265a40a005e18"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "Camera-MSTF_Rescue"
  position {
    x: -193
    y: -61
    width: 85
    height: 158
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "5b7ae4b63363322773540c08"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: 0.35
    z: -0.75
  }
  directional_light_color {
    r: 0.43137255
    g: 0.4627451
    b: 0.078431375
    a: 1
  }
  ambient_light_color {
    r: 0.28235295
    g: 0.3019608
    b: 0.36470589
    a: 1
  }
  ambience_template: "downtown-night"
  combat_music: "Seattle-Set3-Combat"
  default_music: "Seattle-Set3-Stealth"
  loop_combat_music: true
  loop_default_music: true
  no_fow_in_region: false
}
regions {
  name: "top_bottom"
  position {
    x: -136
    y: 8
    width: 2
    height: 4
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5b7b58563363328e07edbd0e"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "bottom_top"
  position {
    x: -157
    y: -23
    width: 5
    height: 3
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5b7b5a363363328e07edbd14"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "breakdown_exit"
  position {
    x: -136
    y: -13
    width: 4
    height: 4
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5b7e0cb0336332cd642b0e27"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "HornyMikes_Area"
  position {
    x: -168
    y: 13
    width: 9
    height: 15
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5b7f4542336332cb231405c3"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "HornyMikes_FoundEm"
  position {
    x: -163
    y: 12
    width: 2
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5b7f71bd3363322d2a1012ee"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "EncounterZone"
  position {
    x: -143
    y: 8
    width: 11
    height: 5
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5b848387336332690c140539"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "EncounterZone_AyleDisappear"
  position {
    x: -129
    y: 14
    width: 1
    height: 3
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5b84bb1a3363320c0b140569"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "VanFixarooRegion"
  position {
    x: -146
    y: -17
    width: 21
    height: 15
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5b84c7243363320c0b1406a1"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "ai_a_reg"
  position {
    x: -125
    y: 13
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5b856c5a3363322a0fc843e5"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "ai_b_reg"
  position {
    x: -158
    y: 12
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5b8571053363322a0fc843e8"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: -6
    y: 0
    z: 9
  }
  orientation: ORIENTATION_S
  displayName: "P1"
  idRef {
    id: "5483605b336265700e0003aa"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "PLAYER"
    enabled_at_start: true
    pc_spawn_number: 0
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -18
    y: 0
    z: 3
  }
  orientation: ORIENTATION_W
  displayName: "po_leese"
  idRef {
    id: "54847100336265840a006e69"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarSecurityGuard"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Cop"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 6
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -8
    y: 0
    z: 45
  }
  orientation: ORIENTATION_W
  displayName: "the_johnson"
  idRef {
    id: "5484740e336265840a006e6e"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    conversationPoint {
      conversationID: "54847eb5336265480f00440e"
      turnToFace: false
    }
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Wealthy/HumanMaleAutumnPony"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Mr. Takeshi"
    pc_spawn_number: -1
    portrait {
      filename: "backerpc_humanmale_robertbowling_dashyoung"
    }
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -6
    y: 0
    z: 42
  }
  orientation: ORIENTATION_N
  idRef {
    id: "5484751e336265840a006e6f"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/HumanMale"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 2
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 3
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 3
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Outfit_Cult Follower"
    }
    equipment {
      prefab_name: "Sword 2 Katana"
    }
    team_id: "Civilians"
    char_name: "Yakuza"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    portrait_code_override: "s5h7c11b0c0t0"
    karma: 23
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -6
    y: 0
    z: 45
  }
  orientation: ORIENTATION_N
  idRef {
    id: "54847595336265840a006e70"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/HumanMale"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 2
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 3
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 3
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Outfit_Cult Follower"
    }
    equipment {
      prefab_name: "Sword 2 Katana"
    }
    team_id: "Civilians"
    char_name: "Yakuza"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    portrait_code_override: "s5h7c11b0c0t0"
    karma: 23
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -10
    y: 0
    z: 42
  }
  orientation: ORIENTATION_S
  idRef {
    id: "5484759b336265840a006e71"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/HumanMale"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 2
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 3
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 3
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Outfit_Cult Follower"
    }
    equipment {
      prefab_name: "Sword 2 Katana"
    }
    team_id: "Civilians"
    char_name: "Yakuza"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    portrait_code_override: "s5h7c11b0c0t0"
    karma: 23
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -10
    y: 0
    z: 45
  }
  orientation: ORIENTATION_S
  idRef {
    id: "5484759d336265840a006e72"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/HumanMale"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 2
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 3
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 3
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Outfit_Cult Follower"
    }
    equipment {
      prefab_name: "Sword 2 Katana"
    }
    team_id: "Civilians"
    char_name: "Yakuza"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    portrait_code_override: "s5h7c11b0c0t0"
    karma: 23
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 6
    y: 0
    z: -9
  }
  orientation: ORIENTATION_E
  idRef {
    id: "5484efb0336265a40a005e40"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/OrkMale"
    character_sheet_id: "CG Ork Shaman"
    character_mod {
      stats {
        body: 0
        quickness: 3
        strength: 0
        charisma: 2
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 1
        armor: 4
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 3
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 4
        spirit_summoning: 4
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 3
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 4
        esp_control: 0
        drone_combat: 0
      }
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "TotemEagle"
    }
    equipment {
      prefab_name: "Player_ShamanUrban"
    }
    equipment {
      prefab_name: "Berlin_Spell Fog"
    }
    equipment {
      prefab_name: "Berlin_Spell Haste 3"
    }
    equipment {
      prefab_name: "Bound Air Spirit 4"
    }
    equipment {
      prefab_name: "Bound Nature Spirit 4"
    }
    equipment {
      prefab_name: "HealthPack_med"
    }
    equipment {
      prefab_name: "HealthPack_med"
    }
    equipment {
      prefab_name: "Grenade (Smoke)"
    }
    equipment {
      prefab_name: "Grenade 1 (Flash)"
    }
    equipment {
      prefab_name: "Sh 2 Mossberg CMDT"
    }
    team_id: "Civilians"
    char_name: "Ghamal"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    cyberware_eyes: "Vision Magnification Eyes"
    portrait {
      filename: "pc_orkmale_06_blondetusks"
    }
    description_bio: "Orcish Shaman who\'s a Runner and a Paranormal Investigator. He prefers Spirit Detective."
    karma: 5
    hiring_cost_override: 0
    hiring_tag: "Crew / Spirit Detective"
    id: "ghamal_level2"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -140.7
    y: 0
    z: -10
  }
  orientation: ORIENTATION_E
  displayName: "van_driver"
  idRef {
    id: "5b7ae72e3363322773540c28"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    prerequisites {
      ops {
        functionName: "AND"
        args {
          call_value {
            functionName: "Comparison (bool)"
            args {
              call_value {
                functionName: "Get Variable (bool)"
                args {
                  string_value: "van_blew_up"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Comparison (bool)"
            args {
              call_value {
                functionName: "Get Variable (bool)"
                args {
                  string_value: "van_fixed_yet"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
      }
    }
    conversationPoint {
      conversationID: "5b7eb12233633237227cc473"
      turnToFace: true
    }
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    character_sheet_id: "Lvl1_Dwarf_Rigger"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "SMG 1 Beretta Model 70"
    }
    equipment {
      prefab_name: "DroneAttackC_Doberman"
    }
    equipment {
      prefab_name: "DroneRepairKit"
    }
    equipment {
      prefab_name: "HealthPack"
    }
    team_id: "Civilians"
    char_name: "Overdrive"
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    cyberware_jack: "Datajack"
    karma: 1
    hiring_cost_override: 1075
    hiring_set_randomizer: "dwarf_rigger"
    hiring_tag: "Rigger"
    id: "Lvl1_Dwarf_Rigger"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -167
    y: 0
    z: 20
  }
  orientation: ORIENTATION_S
  idRef {
    id: "5b7f485d336332cb23140601"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    prerequisites {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "tt_hornymike"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    conversationPoint {
      conversationID: "5b7f4def336332cb23140602"
      turnToFace: true
    }
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/TrollMale"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Player_AdeptStreetMonk"
    }
    team_id: "Civilians"
    char_name: "Horny Mike"
    pc_spawn_number: -1
    portrait {
      filename: "troll_male_smuggler"
    }
    portrait_code_override: "s7h10c7b0c0t3"
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -164
    y: 0
    z: 14
  }
  orientation: ORIENTATION_N
  idRef {
    id: "5b7f77463363322d2a101371"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Homeless/DwarfMaleHomelessBeard"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "New Actor"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 6
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -135
    y: 0
    z: 15
  }
  orientation: ORIENTATION_S
  idRef {
    id: "5b7f790a3363322d2a101372"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Homeless/HumanFemaleHomelessPonchoBundle"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "New Actor2"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 6
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -166.6
    y: 0
    z: 16.6
  }
  orientation: ORIENTATION_W
  idRef {
    id: "5b845937336332f11b140539"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Gangers/DwarfMaleGangerMohawk"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "New Actor3"
    pc_spawn_number: -1
    portrait {
      filename: "NPC_TrollMale_CyberZombie"
    }
    karma: 6
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -133
    y: 0
    z: 13
  }
  orientation: ORIENTATION_W
  GeneralTags: "isAyle"
  GeneralTags: "encounter"
  GeneralTags: "baddies"
  idRef {
    id: "5b845ff8336332f11b140586"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/HumanFemale"
    character_sheet_id: "CG Human Mage"
    character_mod {
      stats {
        body: 2
        quickness: 4
        strength: 0
        charisma: 4
        intelligence: 0
        willpower: 3
        essence: 1
        magic: 0
        hp: 20
        ap: 1
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 2
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 4
        decking: 0
        conjuring: 6
        spirit_summoning: 5
        drone_control: 0
        biotech: 0
        dodge: 5
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 2
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 5
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Spell Heal Wound"
    }
    equipment {
      prefab_name: "Pi 2 Ares Predator"
    }
    equipment {
      prefab_name: "Berlin_Player_ShamanSkirted"
    }
    equipment {
      prefab_name: "Berlin_Spell Toxic Bolt 2"
    }
    equipment {
      prefab_name: "Berlin_Spell Stunball 2"
    }
    equipment {
      prefab_name: "Berlin_Spell Powerbolt 3"
    }
    equipment {
      prefab_name: "Berlin_Spell Haste 2"
    }
    equipment {
      prefab_name: "Enemy_Spell Weaken Armor 2"
    }
    equipment {
      prefab_name: "Bound Toxic Spirit 3"
    }
    team_id: "Civilians"
    char_name: "Ayle"
    GeneralTags: "isAyle"
    GeneralTags: "encounter"
    GeneralTags: "baddies"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    ready_priority: 1
    cyberware_eyes: "Vision Magnification Eyes 2"
    portrait {
      filename: "npc_sorceror_ayle"
    }
    portrait_code_override: "s5h3c9b0c0t0"
    karma: 3
    hiring_cost_override: 1600
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -132
    y: 0
    z: 13
  }
  orientation: ORIENTATION_W
  GeneralTags: "encounter"
  GeneralTags: "baddies"
  idRef {
    id: "5b8460d9336332f11b1405b5"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/HumanMale"
    character_sheet_id: "CG Human Mage"
    character_mod {
      stats {
        body: 4
        quickness: 4
        strength: 0
        charisma: -1
        intelligence: 4
        willpower: 4
        essence: 0
        magic: 0
        hp: 0
        ap: 1
        armor: 4
        force: 0
        morale: 15
        discipline: 0
        awareness: 0
        perception: 20
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 4
        throwing_weapons: 0
        spellcasting: 5
        decking: 0
        conjuring: 1
        spirit_summoning: 0
        drone_control: 0
        biotech: 6
        dodge: 7
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_Mage"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "MageSlick"
    }
    equipment {
      prefab_name: "HealthPack_hi"
    }
    equipment {
      prefab_name: "HealthPack_hi"
    }
    equipment {
      prefab_name: "HealthPack_hi"
    }
    equipment {
      prefab_name: "Spell Ignore Armor"
    }
    equipment {
      prefab_name: "Spell Ball Lightning 2"
    }
    equipment {
      prefab_name: "Spell Powerbolt 3"
    }
    equipment {
      prefab_name: "Spell Confusion"
    }
    equipment {
      prefab_name: "Spell Blindness"
    }
    equipment {
      prefab_name: "Russian Grenade 3 (Frag)"
    }
    equipment {
      prefab_name: "Russian Grenade 3 (Frag)"
    }
    team_id: "Civilians"
    char_name: "Ciaphas"
    GeneralTags: "encounter"
    GeneralTags: "baddies"
    enabled_at_start: false
    pc_spawn_number: -1
    portrait {
      filename: "pc_humanmale_00b"
    }
    portrait_code_override: ""
    karma: 201
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -135
    y: 0
    z: 10
  }
  orientation: ORIENTATION_E
  GeneralTags: "encounter"
  displayName: "suicide_cameraman"
  idRef {
    id: "5b8487ce336332690c140557"
  }
  lod: 0
  character_instance {
    prefab_name: "Objects/InvisibleActor"
    character_sheet_id: "Lonestar_Lv1_Captain"
    character_mod {
      stats {
        morale: 24
        discipline: 0
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 5
        move_speed: 6
        vision_peripheral_distance: 2
        vision_cone_distance: 18
        vision_cone_angle: 90
        is_fearless: 0
      }
      skills {
      }
      specializations {
      }
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Narrator"
    GeneralTags: "encounter"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 44
    hiring_cost_override: 50
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -134
    y: 0
    z: 14
  }
  orientation: ORIENTATION_S
  GeneralTags: "encounter"
  GeneralTags: "baddies"
  displayName: "renraku_goon"
  idRef {
    id: "5b8494c03363328a09140539"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Story/RenrakuSamurai"
    character_sheet_id: "Errant_Lv6_Captain"
    equipment_sheet_id: "Errant_Lv6_Captain"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
        is_fearless: 1
      }
      skills {
        ranged_combat: -2
        close_combat: 3
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 3
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_Soldier"
      attitude: AttitudeBoss
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Sword 2 Katana"
    }
    team_id: "Civilians"
    char_name: "Red Samurai Captain"
    GeneralTags: "encounter"
    GeneralTags: "baddies"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    cyberware_eyes: "Vision Magnification Eyes (Blitz)"
    portrait {
      filename: "misc_tiki-right"
    }
    karma: 136
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -134
    y: 0
    z: 9
  }
  orientation: ORIENTATION_E
  GeneralTags: "encounter"
  displayName: "crew_lvl2_winterhawk"
  idRef {
    id: "5b849c593363328a09140590"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/HumanMale"
    character_sheet_id: "CG Human Mage"
    equipment_sheet_id: "winterhawk_equipment"
    character_mod {
      stats {
        body: 2
        quickness: 3
        strength: 0
        charisma: 1
        intelligence: 2
        willpower: 3
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 1
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 4
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 2
        dodge: 2
        etiquette_corporate: 0
        etiquette_security: 1
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 1
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Winterhawk"
    GeneralTags: "encounter"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    cyberware_jack: "Pain Editor"
    cyberware_body: "Berlin_Synthacardium Mk 1 (Bioware)"
    portrait {
      filename: "backer_humanmale_jonathanbartlett_jonbartlett_tribute"
    }
    description_bio: "Shadowrunning Sorceror. Forced by the MSTF to work for Uncle D. Covertly, of course."
    portrait_code_override: "s4h0c0b0c0t0"
    karma: 2
    hiring_cost_override: 1200
    hiring_tag: "Crew / Mage"
    id: "Winterhawk"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "gotpaid"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "spokewitghamal"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "van_blew_up"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "van_fixed_yet"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "tt_hornymike"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "mstf_stage"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "ai_a"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "ai_b"
    typeName: "bool"
  }
}
mapEvents: "OverdriveComment"
mapEvents: "EZ_Iterate"
goals {
  name: "Meet with the Johnson behind the Stuffer Shack."
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Find a way to fix your van."
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Talk to Horny Mike."
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
worldMapLocation {
  filename: ""
  location {
    x: 0
    y: 0
  }
}
mapName: "01-yaklab-aftermath"
parentStory: ""
scene_title: "SH-169 & I-405 -- Seattle"
scene_subtitle: ""
scene_synopsis: "After loading up in the van with you and your team, you receive a page from your Johnson, or in this case your Takeshi. The survivor you found at the lab has made contact and given you a spectacular performance review. The  Takeshi wants to meet at a Stuffer Shack on the intersection of State Highway 169 and Interstate 405.\n\nTime to get paid."
scene_image: "loadingimage_01_yaklab_aftermath"
scene_continue_button_skip: false
scene_restore_runner_health: true
directional_light_dir {
  x: -0.5
  y: -1
  z: -0.75
}
directional_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
ambient_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
allow_drawn_weapons: false
team_affiliations {
  team_name: "Shadowrunners"
  affiliation: 0
  affiliation: 1
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "Gangers"
  affiliation: 1
  affiliation: 0
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "LoneStar"
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Civilians"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
scene_dimensions {
  dimension_name: "Default"
  initial_alarm_state: 0
}
scene_dimensions {
  dimension_name: "Terminal Trix"
  initial_alarm_state: 0
  turns_per_round: 3
}
character_roster {
}
show_hiring_screen_on_scene_load: false
scene_hiring_prerequisites {
  prereq_description: ""
  prereq_conditions {
  }
}
hiring_slot_count: 0
hiring_minimum_karma: 0
hiring_maximum_karma: 0
roster_overrides {
}
use_hiring_cost_warning: false
hiring_average_cost: 0
override_hiring_average_cost: false
show_equip_screen_on_scene_load: false
is_persistant: false
is_persistant_has_value: false
can_move_outside_camera_regions: true
can_start_before_triggers: false
can_use_team_advancement: false
